{%- if clickhouse_config_format == 'xml' -%}
{# Build clusters data structure from all hosts #}
{%- set all_clusters = {} -%}
{%- for host in groups['clickhouse_cluster'] | default([]) -%}
  {%- for cluster_name, cluster_config in hostvars[host].get('clickhouse_clusters', {}).items() -%}
    {%- if cluster_name not in all_clusters -%}
      {%- set _ = all_clusters.update({cluster_name: {}}) -%}
    {%- endif -%}
    {%- set shard_id = cluster_config.get('shard', 1) -%}
    {%- if shard_id not in all_clusters[cluster_name] -%}
      {%- set _ = all_clusters[cluster_name].update({shard_id: []}) -%}
    {%- endif -%}
    {%- set replica_info = {
      'host': hostvars[host].get('access_ip', hostvars[host].get('ip', hostvars[host].get('ansible_host'))),
      'replica_id': cluster_config.get('replica', 1),
      'hostname': host
    } -%}
    {%- set _ = all_clusters[cluster_name][shard_id].append(replica_info) -%}
  {%- endfor -%}
{%- endfor -%}
<?xml version="1.0"?>
<!--
  Cluster Configuration
  Generated by Ansible - ansible-role-clickhouse
  Best Practice: Keep default config.xml unchanged, add customizations in config.d/
-->
<clickhouse>
    <!-- Remote servers (cluster configuration) -->
    <remote_servers>
{% for cluster_name in all_clusters.keys() | sort %}
        <{{ cluster_name }}>
{% for shard_id in all_clusters[cluster_name].keys() | sort %}
            <shard>
                <internal_replication>true</internal_replication>
{% for replica in all_clusters[cluster_name][shard_id] | sort(attribute='replica_id') %}
                <replica>
                    <host>{{ replica.host }}</host>
                    <port>{{ clickhouse_tcp_port }}</port>
                </replica>
{% endfor %}
            </shard>
{% endfor %}
        </{{ cluster_name }}>
{% endfor %}
    </remote_servers>

    <!-- Macros for distributed DDL -->
    <macros>
{% if clickhouse_clusters | length > 0 %}
{%   set first_cluster_name = clickhouse_clusters.keys() | list | first %}
{%   set first_cluster_config = clickhouse_clusters[first_cluster_name] %}
        <cluster>{{ first_cluster_name }}</cluster>
        <shard>{{ first_cluster_config.get('shard', 1) }}</shard>
        <replica>{{ first_cluster_config.get('replica', 1) }}</replica>
{% endif %}
    </macros>

    <!-- Distributed DDL -->
    <distributed_ddl>
        <path>/clickhouse/task_queue/ddl</path>
    </distributed_ddl>
</clickhouse>
{%- elif clickhouse_config_format == 'yaml' -%}
{# Build clusters data structure from all hosts #}
{%- set all_clusters = {} -%}
{%- for host in groups['clickhouse_cluster'] | default([]) -%}
  {%- for cluster_name, cluster_config in hostvars[host].get('clickhouse_clusters', {}).items() -%}
    {%- if cluster_name not in all_clusters -%}
      {%- set _ = all_clusters.update({cluster_name: {}}) -%}
    {%- endif -%}
    {%- set shard_id = cluster_config.get('shard', 1) -%}
    {%- if shard_id not in all_clusters[cluster_name] -%}
      {%- set _ = all_clusters[cluster_name].update({shard_id: []}) -%}
    {%- endif -%}
    {%- set replica_info = {
      'host': hostvars[host].get('access_ip', hostvars[host].get('ip', hostvars[host].get('ansible_host'))),
      'replica_id': cluster_config.get('replica', 1),
      'hostname': host
    } -%}
    {%- set _ = all_clusters[cluster_name][shard_id].append(replica_info) -%}
  {%- endfor -%}
{%- endfor -%}
# Cluster Configuration
# Generated by Ansible - ansible-role-clickhouse

clickhouse:
  remote_servers:
{% for cluster_name in all_clusters.keys() | sort %}
    {{ cluster_name }}:
{% for shard_id in all_clusters[cluster_name].keys() | sort %}
      shard_{{ shard_id }}:
        internal_replication: true
        replicas:
{% for replica in all_clusters[cluster_name][shard_id] | sort(attribute='replica_id') %}
          - host: {{ replica.host }}
            port: {{ clickhouse_tcp_port }}
{% endfor %}
{% endfor %}
{% endfor %}

  macros:
{% if clickhouse_clusters | length > 0 %}
{%   set first_cluster_name = clickhouse_clusters.keys() | list | first %}
{%   set first_cluster_config = clickhouse_clusters[first_cluster_name] %}
    cluster: {{ first_cluster_name }}
    shard: {{ first_cluster_config.get('shard', 1) }}
    replica: {{ first_cluster_config.get('replica', 1) }}
{% endif %}

  distributed_ddl:
    path: /clickhouse/task_queue/ddl
{% endif %}
